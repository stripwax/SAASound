INCLUDE(CheckLibraryExists)
INCLUDE(FindPackageHandleStandardArgs)
INCLUDE(GNUInstallDirs)
INCLUDE(FindPkgConfig)

SET(SAASound_FOUND FALSE)

SET(SAASOUND_INCLUDE_HINTS ${CMAKE_INSTALL_INCLUDEDIR})
SET(SAASOUND_LIB_HINTS ${CMAKE_INSTALL_LIBDIR})

find_package(PkgConfig)
IF(PKG_CONFIG_FOUND)
	PKG_SEARCH_MODULE(SAASound libSAASound QUIET)
	IF(SAASOUND_INCLUDE_DIRS)
		SET(SAASOUND_INCLUDE_HINTS ${SAASOUND_INCLUDE_DIRS})
	ENDIF()
	IF(SAASOUND_LIBRARY_DIRS)
		SET(SAASOUND_LIBRARY_HINTS ${SAASOUND_LIBRARY_DIRS})
	ENDIF()
ENDIF()

FIND_PATH(SAASOUND_INCLUDE_DIR NAMES SAASound.h HINTS ${CAPSIMAGE_INCLUDE_HINTS})
FIND_LIBRARY(SAASOUND_LIBRARY NAMES SAASound HINTS ${CAPSIMAGE_LIBRARY_HINTS} PATH_SUFFIXES lib SAASound)

MARK_AS_ADVANCED( SAASOUND_LIBRARY SAASOUND_INCLUDE_DIR )

FIND_PACKAGE_HANDLE_STANDARD_ARGS( SAASound DEFAULT_MSG SAASOUND_LIBRARY SAASOUND_INCLUDE_DIR )

if(SAASound_FOUND)
	set(SAASound_LIBRARIES ${CAPSIMAGE_LIBRARY})
	set(SAASound_INCLUDE_DIRS ${CAPSIMAGE_INCLUDE_DIR})
	if(NOT TARGET SAASound::SAASound)
		add_library(SAASound::SAASound INTERFACE IMPORTED)
		set_target_properties(SAASound::SAASound PROPERTIES
			INTERFACE_INCLUDE_DIRECTORIES "${SAASOUND_INCLUDE_DIR}"
			INTERFACE_LINK_LIBRARIES "${SAASOUND_LIBRARY}"
			VERSION "${SAASOUND_VERSION}")
	endif()
endif()
