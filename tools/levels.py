# some interesting facts:
# setting the sync bit (28,2) does not synchronise the below patterns to the
# frequency generators.  so what you see below could be 'shifted' left or right in time
# w.r.t the main oscillator period edge .   a good way to see this is to set an osc to the
# highest frequency (freq=255, octave=7) and maximum volume (vol=255) and no envelopes,
# and watch the output for the pulses;  it should look like the last row
# #  '1111000011111111111111111111111111111111111111111111111111111111',
# where there's a small transition ('peak') to zero in the 'on' period of the osc.
# then set 28,2 then 28,1
# and see that the 0 'peak' is now in a different place relative to the osc edge.
#
# However, the sync between the 8mhz pattern generator and the osc doesn't change
# if you just change the volume.  So once you've established where you want to set
# the 'origin' of the below patterns, you can reliably change the volume register
# and/or env register to capture each different pattern


amps = [
    '0000000000000000000000000000000000000000000000000000000000000000',
    '0000000011110000000000000000000000000000000000000000000000000000',
    '0000000000001111111100000000000000000000000000000000000000000000',
    '0000000011111111111100000000000000000000000000000000000000000000',
    '0000000000000000000000000000000000001111111111111111000000000000',
    '0000000011110000000000000000000000001111111111111111000000000000',
    '0000000000001111111100000000000000001111111111111111000000000000',
    '0000000011111111111100000000000000001111111111111111000000000000',
    '1111000000000000000011111111111111110000000000000000111111111111',
    '1111000011110000000011111111111111110000000000000000111111111111',
    '1111000000001111111111111111111111110000000000000000111111111111',
    '1111000011111111111111111111111111110000000000000000111111111111',
    '1111000000000000000011111111111111111111111111111111111111111111',
    '1111000011110000000011111111111111111111111111111111111111111111',
    '1111000000001111111111111111111111111111111111111111111111111111',
    '1111000011111111111111111111111111111111111111111111111111111111',
]

envs = [
    '0000000000000000000000000000000000000000000000000000000000000000',
    '0000000000001000000000000000100000000000000010000000000000001000',
    '0000010000000100000001000000010000000100000001000000010000000100',
    '0000010000001100000001000000110000000100000011000000010000001100',
    '0011000000110000001100000011000000110000001100000011000000110000',
    '0011000000111000001100000011100000110000001110000011000000111000',
    '0011010000110100001101000011010000110100001101000011010000110100',
    '0011010000111100001101000011110000110100001111000011010000111100',
    '1100001111000011110000111100001111000011110000111100001111000011',
    '1100001111001011110000111100101111000011110010111100001111001011',
    '1100011111000111110001111100011111000111110001111100011111000111',
    '1100011111001111110001111100111111000111110011111100011111001111',
    '1111001111110011111100111111001111110011111100111111001111110011',
    '1111001111111011111100111111101111110011111110111111001111111011',
    '1111011111110111111101111111011111110111111101111111011111110111',
    '1111011111111111111101111111111111110111111111111111011111111111',
]

vas = []
for ai,a in enumerate(amps):
    v = 0
    for x in range(0,64):
        al = a[x]
        if al=='1':
            v += 1
    vas.append(v)
 #   print('%d %d'%(ai,v))
print(vas)

vs = []

# only need to output 8 different amp levels for the combined table
# since, when env is enabled, only the 3 MSB of amplitude are used (LSB taken as zero)
for ai,a in enumerate(amps):
    if ai % 2: continue
    vas = []
    for ei,e in enumerate(envs):
        v = 0
        for x in range(0,64):
            al = a[x]
            el = e[x]
            if al=='1' and el=='1':
                v += 1
        vas.append(v)
    print('{'+','.join([str(x) for x in vas])+'} // amp '+str(ai))
    vs.append(vas)

#print(vs)
